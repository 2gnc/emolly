{"version":3,"sources":["typings.ts","components/pages/Result/Result.tsx","components/Layout/Layout.tsx","components/InnerBox/InnerBox.tsx","components/Logo/Logo.tsx","components/Wave/Wave.tsx","components/Header/Header.tsx","components/Button/Button.tsx","components/Text/Text.tsx","components/pages/Main/Main.tsx","components/ArrowButton/ArrowButton.tsx","components/QuestionItem/QuestionItem.tsx","components/StepQuestions/StepQuestions.tsx","components/pages/Questionnaire/Questionnaire.tsx","components/IconButton/IconButton.tsx","components/pages/Upload/Upload.tsx","components/Modal/Modal.tsx","components/EmailForm/EmailForm.tsx","components/pages/Thanks/Thanks.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["LayoutIllustrationTypes","SkinTypes","b","cn","Layout","illustrationType","children","className","illustration","InnerBox","cls","Logo","Wave","Header","text","isMain","noWave","main","Button","onClick","link","disabled","href","isLink","Text","Main","to","ArrowButton","direction","QuestionItem","id","isChecked","onAnswerSet","e","stopPropagation","checked","StepQuestions","props","questions","answer","items","map","QUESTIONS","Questionnaire","useState","setAnswer","handleAnswerSet","useCallback","handleLeftArrowClick","handleRightArrowClick","IconButton","type","Upload","handlePhotoClick","handleUploadClick","Modal","position","isVisible","onClose","visible","EmailForm","isUsernameInputValid","isEmailInputValid","usernameInputContent","setUsernameInputContent","emailInputContent","setEmailInputContent","isAgreementChecked","setAgreementChecked","isButtonEnabled","Boolean","length","htmlFor","name","value","onChange","target","preventDefault","Result","skinType","NORMAL","isModalShown","setModalShown","handleModalClose","Thanks","App","useEffect","Screen","lockOrientation","path","exact","LEFT_BIG","BOTTOM","TOP_HALF","TOP","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19020986.chunk.js","sourcesContent":["export interface IWithCls {\n    cls?: string;\n}\n\nexport enum LayoutIllustrationTypes {\n    TOP = 'top',\n    TOP_HALF = 'top-half',\n    LEFT_BIG = 'left-big',\n    LEFT_SMALL = 'left-small',\n    LEFT_SMALL_CENTRED = 'left-small-centred',\n    RIGHT_BIG = 'right-big',\n    RIGHT_SMALL = 'right-small',\n    BOTTOM = 'bottom',\n    TOP_AND_LEFT = 'top-and-left',\n    TOP_AND_RIGHT = 'top-and-right'\n}\n","import React, { useState, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { cn } from '@bem-react/classname';\nimport { InnerBox } from '../../InnerBox/InnerBox';\nimport { Text } from '../../Text/Text';\nimport { Button } from '../../Button/Button';\nimport { Logo } from '../../Logo/Logo';\nimport { Modal } from '../../Modal/Modal';\nimport { EmailForm } from '../../EmailForm/EmailForm';\n\nimport './Result.css';\n\nenum SkinTypes {\n    NORMAL = 'нормальная'\n}\ninterface Props {\n    skinType?: SkinTypes\n}\n\nconst b = cn('Result');\n\nexport const Result: React.FC<Props> = ({ skinType = SkinTypes.NORMAL }) => {\n    const [isModalShown, setModalShown] = useState(false);\n    const handleModalClose = useCallback(() => {\n        setModalShown(false);\n    }, []);\n    const handleModalOpen = () => {\n        setModalShown(true);\n    }\n\n    return (\n        <InnerBox cls={b()}>\n            <Logo cls={b('Logo')} />\n            <Text>\n                Прости! Не хотела разочаровывать\n                тебя, но я только учусь магии\n                распознавания составов. Через\n                несколько месяцев я буду уметь все и\n                точно тебя не подведу!\n                Но у меня есть для тебя и хорошие\n                новости.\n            </Text>\n            <Text>\n                Во-первых, твой тип кожи: \n            </Text>\n            <Link to=\"/thanks-demo\" className={b('DELETE_THIS')}>\n            <div className={b('Skin')}>\n                {skinType}\n            </div>\n            </Link>\n            <Text cls={b('Extender')}>\n                А во-вторых, как только я буду готова,\n                я подарю тебе бесплатную подписку\n                на мой премиум-аккаунт – там\n                будет много всего полезного. Можешь\n                оставить свой e-mail – я подключу к\n                нему и пришлю уведомление.\n            </Text>\n            <Button\n                text=\"Оставить e-mail\"\n                onClick={handleModalOpen} \n            />\n            <Modal position=\"bottom\" isVisible={isModalShown} onClose={handleModalClose}>\n                <EmailForm />\n            </Modal>\n        </InnerBox>\n    );\n};\n","import React from 'react';\nimport { cn } from '@bem-react/classname';\nimport { LayoutIllustrationTypes } from '../../typings';\n\nimport './Layout.css';\ninterface Props {\n    illustrationType: LayoutIllustrationTypes;\n}\n\nconst b = cn('Layout');\n\nexport const Layout: React.FC<Props> = ({ illustrationType, children }) => (\n    <div className={b({illustration: illustrationType})}>\n        {children}\n    </div>\n);\n","import React from 'react';\nimport { cn } from '@bem-react/classname';\nimport { IWithCls } from '../../typings';\n\nimport './InnerBox.css';\n\ninterface Props extends IWithCls {}\n\nconst b = cn('InnerBox');\n\nexport const InnerBox: React.FC<Props> = ({ children, cls }) => <div className={b(null, [cls])}>{children}</div>;\n","import React from 'react';\nimport { cn } from '@bem-react/classname';\nimport { IWithCls } from '../../typings';\n\nimport './Logo.css';\n\ninterface Props extends IWithCls {}\n\nconst b = cn('Logo');\n\nexport const Logo: React.FC<Props> = ({ cls }) => <div className={b(null, [cls])} />;\n","import React from 'react';\nimport { cn } from '@bem-react/classname';\nimport { IWithCls } from '../../typings';\n\nimport './Wave.css';\n\ninterface Props extends IWithCls {}\n\nconst b = cn('Wave');\n\nexport const Wave: React.FC<Props> = ({ cls }) => <div className={b(null, [cls])} />;\n","import React  from 'react';\nimport { cn } from '@bem-react/classname';\nimport { Wave } from '../Wave/Wave';\nimport { IWithCls } from '../../typings';\n\nimport './Header.css';\n\ninterface Props extends IWithCls {\n    text: string;\n    isMain?: boolean;\n    noWave?: boolean;\n}\n\nconst b = cn('Header');\n\nexport const Header: React.FC<Props> = ({ text, isMain, noWave, cls }) => (\n    <div className={b({main: isMain}, [cls])}>\n        <h1 className={b('Text')}>\n            {text}\n        </h1>\n        {\n            !noWave &&\n                <div className={b('Wave')}>\n                    <Wave />\n                </div>\n        }\n        \n    </div>\n);\n","import React from 'react';\nimport { cn } from '@bem-react/classname';\nimport { IWithCls } from '../../typings';\n\nimport './Button.css';\n\ninterface Props extends IWithCls {\n    text: string; // контент кнопки\n    onClick?: (e: React.MouseEvent) => void; // обработчик клика если компонент используется как кнопка\n    link?: string; // урл если компонент должен являться ссылкой\n    disabled?: boolean;\n}\n\nconst b = cn('Button');\n\nexport const Button: React.FC<Props> = ({ text, onClick, link, cls, disabled = false }) => {\n    if (link) {\n        return (\n            <a href={link} className={b({ isLink: true }, [cls])}>\n                {text}\n            </a>\n        )\n    } else if (onClick) {\n        return (\n            <button onClick={onClick} className={b(null, [cls])} disabled={disabled}>\n                {text}\n            </button>\n        )\n    } else {\n        return null;\n    }\n}\n","import React from 'react';\nimport { cn } from '@bem-react/classname';\nimport { IWithCls } from '../../typings';\n\nimport './Text.css';\n\ninterface Props extends IWithCls {}\n\nconst b = cn('Text');\n\nexport const Text: React.FC<Props> = ({cls, children }) => <p className={b(null, [cls])}>{children}</p>\n","import React from 'react';\nimport { cn } from '@bem-react/classname';\nimport { Link } from 'react-router-dom';\nimport { InnerBox } from '../../InnerBox/InnerBox';\nimport { Logo } from '../../Logo/Logo';\nimport { Header } from '../../Header/Header';\nimport { Button } from '../../Button/Button';\nimport { Text } from '../../Text/Text';\n\nimport './Main.css';\nconst b = cn('Main');\n\ninterface Props {};\n\nexport const Main: React.FC<Props> = () => (\n    <InnerBox>\n        <div className={b()}>\n            <Logo />\n            <Header\n                text=\"сканер для подбора косметики\"\n                isMain\n            />\n            <div className={b('Content')}>\n                <h3 className={b('Hello')}>Привет!</h3>\n                <Text>\n                    Я Emolly, твой личный косметолог, и я помогу тебе подобрать косметику для ухода за лицом.\n                    Просто сфотографируй средство, которое собираешься купить, и пришли фото мне.\n                    Я проанализирую его состав и скажу, насколько оно тебе подходит. \n                    А еще я расскажу, на что тебе обращать внимание при выборе косметики.\n                </Text>\n                <Text>\n                    Но для начала давай познакомимся.\n                </Text>\n                <Link to=\"/form-demo\" className=\"Button_isLink\">\n                    <Button\n                        text=\"Познакомиться\"\n                        link=\"ya.ru\"\n                    />\n                </Link>\n            </div>\n        </div>\n    </InnerBox>\n);\n","import React from 'react';\nimport { cn } from '@bem-react/classname';\n\nimport './ArrowButton.css';\n\ninterface Props {\n    direction: 'right' | 'left';\n    onClick: () => void;\n}\n\nconst b = cn('ArrowButton');\n\nexport const ArrowButton: React.FC<Props> = ({ direction }) => <div className={b({ direction })} />;\n","import React from 'react';\nimport { cn } from '@bem-react/classname';\n\nimport './QuestionItem.css';\n\ninterface Props {\n    id: string;\n    text: string;\n    isChecked?: boolean;\n    onAnswerSet: (id: string) => void;\n}\n\nconst b = cn('QuestionItem');\n\nexport const QuestionItem: React.FC<Props> = ({ text, id, isChecked, onAnswerSet }) => {\n    const handleClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        e.stopPropagation();\n        onAnswerSet(id);\n    };\n\n    return (\n        <div className={b()} onClick={handleClick}>\n            <div className={b('Radio', {checked: isChecked})} />\n            <div className={b('Text')}>\n                {text}\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { cn } from '@bem-react/classname';\nimport { QuestionItem } from '../QuestionItem/QuestionItem';\nimport { IQuestion } from '../pages/Questionnaire/Questionnaire';\n\nimport './StepQuestions.css';\n\ninterface Props {\n    questions: IQuestion[];\n    onAnswerSet: (answer: string) => void;\n    answer?: string;\n}\n\nconst b = cn('StepQuestions');\n\nexport const StepQuestions: React.FC<Props> = (props) => {\n    const {questions, answer, onAnswerSet } = props;\n    const items: React.ReactNode[] = questions.map(({text, id}) => (\n        <QuestionItem\n            text={text}\n            id={id}\n            onAnswerSet={onAnswerSet}\n            isChecked={answer === id}\n            key={id}\n        />\n    ));\n    return (\n        <div className={b()}>\n            {items}\n        </div>\n    )\n};\n","import React, { useState, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { cn } from '@bem-react/classname';\nimport { InnerBox } from '../../InnerBox/InnerBox';\nimport { Header } from '../../Header/Header';\nimport { ArrowButton } from '../../ArrowButton/ArrowButton';\nimport { StepQuestions } from '../../StepQuestions/StepQuestions';\n\nimport './Questionnaire.css';\n\ninterface Props {}\nexport interface IQuestion {\n    text: string;\n    id: string;\n};\n\nconst b = cn('Questionnaire');\nconst HEADER = 'Есть ли у тебя на лице постоянные покраснения, сосудистая сетка, высыпания?';\nconst QUESTIONS: IQuestion[] = [\n    {\n        text: `У меня матовая кожа (мало кожного сала)`,\n        id: '01'\n    },\n    {\n        text: 'У меня блестящая кожа (много кожного сала)',\n        id: '02'\n    },\n    {\n        text: 'У меня блестит только лоб, нос и подбородок',\n        id: '03'\n    },\n    {\n        text: 'У меня не матовая и не блестящая кожа (лицо не жирное и не сухое)',\n        id: '04'\n    }\n];\n\nexport const Questionnaire: React.FC<Props> = () => {\n    const [answer, setAnswer] = useState<string>();\n    const handleAnswerSet = useCallback((answer: string) => {\n        setAnswer(answer);\n    }, []);\n\n    const handleLeftArrowClick = useCallback(() => {}, []);\n    const handleRightArrowClick = useCallback(() => {}, []);\n\n    return (\n        <InnerBox cls={b('Box')}>\n            <div className={b('Quiz')}>\n                <Header text={HEADER} />\n                <StepQuestions\n                    questions={QUESTIONS}\n                    onAnswerSet={handleAnswerSet}\n                    answer={answer}\n                />\n                <div className={b('Buttons')}>\n                    <ArrowButton direction=\"left\" onClick={handleLeftArrowClick} />\n                    <Link to=\"/upload-demo\">\n                        <ArrowButton direction=\"right\" onClick={handleRightArrowClick} />\n                    </Link>\n                </div>\n            </div>\n        </InnerBox>\n    )\n};\n","import React from 'react';\nimport { cn } from '@bem-react/classname';\nimport { Link } from 'react-router-dom';\n\nimport './IconButton.css';\n\ninterface Props {\n    type: 'photo' | 'upload';\n    onClick: () => void;\n}\n\nconst b = cn('IconButton');\n\nexport const IconButton: React.FC<Props> = ({ type, onClick }) => {\n    const  text = type === 'photo' ?\n        'Сфотографировать состав' :\n        'Загрузить фото состава';\n    \n    return (\n        <div className={b()} onClick={onClick}>\n            <p className={b('Text')}>\n                {text}\n            </p>\n            <Link to=\"/result-demo\">\n                <div className={b('Icon', { type })} />\n            </Link>\n        </div>\n    )\n}\n","import React, { useCallback } from 'react';\nimport { cn } from '@bem-react/classname';\nimport { InnerBox } from '../../InnerBox/InnerBox';\nimport { Wave } from '../../Wave/Wave';\nimport { IconButton } from '../../IconButton/IconButton';\nimport { Logo } from '../../Logo/Logo';\nimport { Text } from '../../Text/Text';\n\nimport './Upload.css';\n\ninterface Props {}\n\nconst b = cn('Upload');\n\nexport const Upload: React.FC<Props> = () => {\n    const handlePhotoClick = useCallback(() => false, []);\n    const handleUploadClick = useCallback(() => false, []);\n\n    return (\n        <InnerBox cls={b('Box')}>\n            <Logo cls={b('Logo')} />\n            <Text>\n                Отлично! Теперь можем выбрать тебе косметику.\n            </Text>\n            <Text>\n                Возьми любое средство для ухода за лицом, сфотографируй список ингредиентов на упаковке, отправь мне и – вуаля! Я скажу, что тебе от этой косметики ждать. \n            </Text>\n            <Text>\n                Попробуем?\n            </Text>\n            <Wave cls={b('Wave')} />\n            <div className={b('Icons')}>\n                <IconButton type=\"photo\" onClick={handlePhotoClick} />\n                <IconButton type=\"upload\" onClick={handleUploadClick} />\n            </div>\n        </InnerBox>\n    )\n};\n","import React from 'react';\nimport { cn } from '@bem-react/classname';\nimport { IWithCls } from '../../typings';\n\nimport './Modal.css';\n\ninterface Props extends IWithCls {\n    position: 'bottom' | 'center';\n    isVisible: boolean;\n    onClose: () => void;\n}\n\nconst b = cn('Modal');\n\nexport const Modal: React.FC<Props> = ({ cls, position, children, isVisible, onClose }) => {\n    const clickInterception = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        e.stopPropagation();\n    }\n    return (\n        <div className={b({ position, visible: isVisible }, [cls])} onClick={onClose}>\n            <div className={b('Content')} onClick={clickInterception}>\n                <div className={b('Close')} onClick={onClose} />\n                {children}\n            </div>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport { cn } from '@bem-react/classname';\nimport { Button } from '../Button/Button';\n\nimport './EmailForm.css';\n\ninterface Props {}\n\nconst b = cn('EmailForm');\n\nexport const EmailForm: React.FC<Props> = () => {\n    const handleFormSubmit = (e: React.MouseEvent) => {\n        e.preventDefault();\n    };\n\n    const [isUsernameInputValid, setUsernameInputValid] = useState<boolean | null>(true);\n    const [isEmailInputValid, setEmailInputValid] = useState<boolean | null>(true);\n    const [usernameInputContent, setUsernameInputContent] = useState('');\n    const [emailInputContent, setEmailInputContent] = useState('');\n    const [isAgreementChecked, setAgreementChecked] = useState(false);\n\n    const isButtonEnabled = Boolean(isUsernameInputValid !== false &&\n        isEmailInputValid !== false &&\n        usernameInputContent.length &&\n        emailInputContent.length &&\n        isAgreementChecked);\n\n    return (\n        <form className={b()}>\n            <label htmlFor=\"username\">\n                Имя\n                <input\n                    type=\"text\"\n                    name=\"username\"\n                    id=\"username\"\n                    value={usernameInputContent}\n                    onChange={(e) => setUsernameInputContent(e.target.value)}\n                />\n            </label>\n            <label htmlFor=\"email\">\n                E-mail\n                <input\n                    type=\"text\"\n                    name=\"email\"\n                    id=\"email\"\n                    value={emailInputContent}\n                    onChange={(e) => setEmailInputContent(e.target.value)}\n                />\n            </label>\n            <label htmlFor=\"confirm\">\n                <input\n                    type=\"checkbox\"\n                    name=\"confirm\"\n                    id=\"confirm\"\n                    checked={isAgreementChecked}\n                    onChange={() => setAgreementChecked(!isAgreementChecked)}\n                    className={b('CheckboxInput')}\n                />\n                <div className={b('Checkbox')} />\n                Согласие на обработку персональных данных\n            </label>\n            <Button\n                text=\"Отправить\"\n                onClick={handleFormSubmit}\n                disabled={!isButtonEnabled}\n                cls={b('Button')}\n            />\n        </form>\n    );\n};\n","import React from 'react';\nimport { cn } from '@bem-react/classname';\nimport { InnerBox } from '../../InnerBox/InnerBox';\nimport { Header } from '../../Header/Header';\nimport { Logo } from '../../Logo/Logo';\nimport { Text } from '../../Text/Text';\n\nimport './Thanks.css';\n\nconst b = cn('Thanks');\n\nexport const Thanks: React.FC = () => (\n    <InnerBox cls={b()}>\n        <Header\n            text=\"Отлично! Будем на связи! Твоя Emolly\"\n            noWave\n            cls={b('Header')}\n        />\n        <Text cls={b('Text')}>\n            Пиши нам: <a href=\"mailto:info@emolly.ru\">info@emolly.ru</a>\n        </Text>\n        <Text cls={b('Text')}>\n            Будем рады услышать твои предложения и ответить на вопросы\n        </Text>\n        <Logo cls={b('Logo')} />\n        <p className={b('About')}>\n            <a href=\"/\">\n                о проекте\n            </a>\n        </p>\n    </InnerBox>\n);\n","import React, { useEffect } from 'react';\n// роутинг для демо\nimport { LayoutIllustrationTypes } from '../../typings';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { cn } from '@bem-react/classname';\nimport { Layout } from '../Layout/Layout';\nimport { Main } from '../pages/Main/Main';\nimport { Questionnaire } from '../pages/Questionnaire/Questionnaire';\nimport { Upload } from '../pages/Upload/Upload';\nimport { Result } from '../pages/Result/Result';\nimport { Thanks } from '../pages/Thanks/Thanks';\n\nimport './App.css';\n\nconst b = cn('App');\n\nexport const App: React.FC = () => {\n    useEffect(() => {\n        if (Screen && (Screen as any).lockOrientation) {\n            (Screen as any).lockOrientation();\n        }\n    }, []);\n\n    return (\n        <BrowserRouter>\n            <div className={b()}>\n                <Switch>\n                    <Route path=\"/form-demo\" exact>\n                        <Layout illustrationType={LayoutIllustrationTypes.LEFT_BIG}>\n                            <Questionnaire />\n                        </Layout>\n                    </Route>\n                    <Route path=\"/upload-demo\" exact>\n                        <Layout illustrationType={LayoutIllustrationTypes.BOTTOM}>\n                            <Upload />\n                        </Layout>\n                    </Route>\n                    <Route path=\"/result-demo\" exact>\n                        <Layout illustrationType={LayoutIllustrationTypes.TOP_HALF}>\n                            <Result />\n                        </Layout>\n                    </Route>\n                    <Route path=\"/thanks-demo\" exact>\n                        <Layout illustrationType={LayoutIllustrationTypes.BOTTOM}>\n                            <Thanks />\n                        </Layout>\n                    </Route>\n                    <Route path=\"*\" >\n                        <Layout illustrationType={LayoutIllustrationTypes.TOP}>\n                            <Main />\n                        </Layout>\n                    </Route>\n                </Switch>\n            </div>\n        </BrowserRouter>\n    );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}